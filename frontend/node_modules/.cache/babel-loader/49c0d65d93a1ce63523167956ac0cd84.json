{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'App',\n\n  beforeCreate() {\n    this.$store.commit('initializeStore');\n    const access = this.$store.state.access;\n\n    if (access) {\n      axios.defaults.headers.common['Authorization'] = 'JWT ' + access;\n    } else {\n      axios.defaults.headers.common['Authorization'] = '';\n    }\n  },\n\n  mounted() {\n    setInterval(() => {\n      this.getAcces();\n    }, 50000);\n  },\n\n  methods: {\n    getAcces(e) {\n      const accessData = {\n        refresh: this.$store.state.refresh\n      };\n      axios.post('/api/v1/jwt/refresh/', accessData).then(response => {\n        const access = response.data.access;\n        this.$store.commit('setAccess', access);\n        axios.defaults.headers.common['Authorization'] = 'JWT ' + access;\n        localStorage.setItem('access', access);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAWA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAc;EACZC,IAAI,EAAE,KADM;;EAEZC,YAAY,GAAE;IACZ,KAAKC,MAAL,CAAYC,MAAZ,CAAmB,iBAAnB;IACA,MAAMC,MAAK,GAAI,KAAKF,MAAL,CAAYG,KAAZ,CAAkBD,MAAjC;;IACA,IAAGA,MAAH,EAAU;MACRL,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,SAASJ,MAA1D;IACD,CAFD,MAEK;MACHL,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,EAAjD;IACF;EACD,CAVW;;EAWZC,OAAO,GAAE;IACPC,WAAW,CAAC,MAAI;MACd,KAAKC,QAAL;IACD,CAFU,EAET,KAFS,CAAX;EAGD,CAfW;;EAgBZC,OAAO,EAAC;IACND,QAAQ,CAACE,CAAD,EAAG;MACT,MAAMC,UAAU,GAAC;QACfC,OAAO,EAAE,KAAKb,MAAL,CAAYG,KAAZ,CAAkBU;MADZ,CAAjB;MAGAhB,KAAK,CAACiB,IAAN,CAAW,sBAAX,EAAkCF,UAAlC,EACKG,IADL,CACUC,QAAQ,IAAE;QACd,MAAMd,MAAK,GAAIc,QAAQ,CAACC,IAAT,CAAcf,MAA7B;QACA,KAAKF,MAAL,CAAYC,MAAZ,CAAmB,WAAnB,EAA+BC,MAA/B;QACAL,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAA+C,SAAOJ,MAAtD;QACAgB,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BjB,MAA9B;MACD,CANL,EAOKkB,KAPL,CAOWC,KAAK,IAAE;QACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CATL;IAUF;;EAfM;AAhBI,CAAd","names":["axios","name","beforeCreate","$store","commit","access","state","defaults","headers","common","mounted","setInterval","getAcces","methods","e","accessData","refresh","post","then","response","data","localStorage","setItem","catch","error","console","log"],"sourceRoot":"","sources":["/home/mint/PycharmProjects/sigmaVue/frontend/src/App.vue"],"sourcesContent":["<template>\n  <nav>\n    <router-link to=\"/\">Home</router-link> |\n    <router-link to=\"/login\">Inicar Sesi√≥n</router-link> |\n    <router-link to=\"/register\">Registrarse</router-link> |\n\n    <router-link to=\"/about\">About</router-link>\n  </nav>\n  <router-view/>\n</template>\n<script>\nimport axios from 'axios'\nexport default{\n  name: 'App',\n  beforeCreate(){\n    this.$store.commit('initializeStore')\n    const access = this.$store.state.access\n    if(access){\n      axios.defaults.headers.common['Authorization'] = 'JWT ' + access\n    }else{\n      axios.defaults.headers.common['Authorization'] = ''\n    }\n  },\n  mounted(){\n    setInterval(()=>{\n      this.getAcces()\n    },50000)\n  },\n  methods:{\n    getAcces(e){\n      const accessData={\n        refresh: this.$store.state.refresh,\n      }\n      axios.post('/api/v1/jwt/refresh/',accessData)\n          .then(response=>{\n            const access = response.data.access\n            this.$store.commit('setAccess',access)\n            axios.defaults.headers.common['Authorization']='JWT '+access\n            localStorage.setItem('access',access)\n          })\n          .catch(error=>{\n            console.log(error)\n          })\n    }\n  }\n\n\n}\n</script>\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n\n  a {\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}