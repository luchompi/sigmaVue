{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'SingUp',\n\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n\n  methods: {\n    submitForm(e) {\n      const formData = {\n        username: this.username,\n        password: this.password\n      };\n      axios.post('/api/v1/users/', formData).then(response => {\n        alert(response);\n        this.$router.push('/');\n      }).catch(error => {\n        alert(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAE,QADO;;EAEfC,IAAI,GAAG;IACH,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,QAAQ,EAAE;IAFL,CAAP;EAID,CAPY;;EAQbC,OAAO,EAAC;IACNC,UAAU,CAACC,CAAD,EAAG;MACX,MAAMC,QAAO,GAAI;QACjBL,QAAQ,EAAE,KAAKA,QADE;QAEjBC,QAAQ,EAAE,KAAKA;MAFE,CAAjB;MAIFJ,KAAK,CAACS,IAAN,CAAW,gBAAX,EAA6BD,QAA7B,EACKE,IADL,CACUC,QAAO,IAAK;QAChBC,KAAK,CAACD,QAAD,CAAL;QACA,KAAKE,OAAL,CAAaC,IAAb,CAAkB,GAAlB;MACD,CAJL,EAKKC,KALL,CAKWC,KAAI,IAAK;QACdJ,KAAK,CAACI,KAAD,CAAL;MACD,CAPL;IAQA;;EAdM;AARK,CAAf","names":["axios","name","data","username","password","methods","submitForm","e","formData","post","then","response","alert","$router","push","catch","error"],"sourceRoot":"","sources":["/home/mint/PycharmProjects/sigmaVue/frontend/src/views/SingUp.vue"],"sourcesContent":["<template>\n  <div id=\"SingUp\">\n    <h1>SingUp Page</h1>\n    <form v-on:submit.prevent=\"submitForm\">\n      <label>Usuario</label>\n      <input type=\"email\" name=\"username\" v-model=\"username\"> <br><br>\n      <label>Contrase√±a</label>\n      <input type=\"password\" name=\"password\" v-model=\"password\"> <br><br>\n      <button type=\"submit\">Iniciar Sesion</button>\n    </form>\n  </div>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'SingUp',\ndata() {\n    return {\n      username: '',\n      password: ''\n    }\n  },\n  methods:{\n    submitForm(e){\n      const formData = {\n      username: this.username,\n      password: this.password\n    }\n    axios.post('/api/v1/users/', formData)\n        .then(response => {\n          alert(response)\n          this.$router.push('/')\n        })\n        .catch(error => {\n          alert(error)\n        })\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}